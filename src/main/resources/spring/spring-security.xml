<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- HTTP basic authentication in Spring Security -->
    <http>
        <intercept-url pattern="/login" access="permitAll"/>
        <intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/**" access="isAuthenticated()" />
        <access-denied-handler ref="customAccessDeniedHandler"/>

        <form-login
                login-page="/login"
                login-processing-url="/j_spring_security_check"
                authentication-failure-url="/login?error"
                default-target-url="/main"
                always-use-default-target="true"
        />
        <logout logout-success-url="/login?logout"
        logout-url="/logout"
        />
        <csrf/>

    </http>

    <beans:bean name="customAccessDeniedHandler" class="com.gmail.osbornroad.util.CustomAccessDeniedHandler"/>

<!--
    <authentication-manager>
        <authentication-provider>
            <user-service>
                <user name="Pavel" password="{noop}1" authorities="ROLE_USER" />
                <user name="Maksim" password="{noop}2" authorities="ROLE_ADMIN" />
            </user-service>
        </authentication-provider>
    </authentication-manager>
-->

    <beans:bean id="passwordEncoder"
          class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
        <beans:constructor-arg name="strength" value="11"/>
    </beans:bean>

    <authentication-manager>
        <authentication-provider>
            <password-encoder ref="passwordEncoder"/>
            <jdbc-user-service data-source-ref="postgreeDataSource"
                               users-by-username-query="SELECT name, password, enabled FROM users WHERE name = ?"
                               authorities-by-username-query="
                                                                   SELECT u.name, r.role FROM users u, user_roles r WHERE u.id = r.user_id AND u.name = ?"
            />
        </authentication-provider>
    </authentication-manager>


</beans:beans>
